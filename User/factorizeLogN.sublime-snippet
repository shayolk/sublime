<snippet>
	<content><![CDATA[
#warning redefine nax
const int nax=1e7+5;
vector<int> minPrime(nax+1);

void init() {
    for(int i=2; i*i<=nax; ++i) if(minPrime[i]==0) for(int j=i*i; j<=nax; j+=i) if(minPrime[j]==0) minPrime[j]=i;
    for(int i=2; i<=nax; ++i) if (minPrime[i]==0) minPrime[i]=i;
}

vector<int> factorize(int n) {
    vector<int> res;
    while (n!=1) {
        res.emplace_back(minPrime[n]);
        n/=minPrime[n];
    }
    return res;
}

vector<pair<int,int>> factorize(int n) {
    vector<pair<int,int>> res;
    while (n!=1) {
        int cnt=0, fact=minPrime[n];
        while(minPrime[n]==fact) {
            ++cnt;
            n/=minPrime[n];
        }
        res.emplace_back(fact,cnt);
    }
    return res;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>_factorizeLogN</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>

<snippet>
	<content><![CDATA[
vector<int> sieve(int n) {
    vector<bool> isP(n+1, true);
    isP[0]=isP[1]=false;
    vector<int> primes;
    for(int j=4; j<=n; j+=2) isP[j]=false;
    for(int i=3; i*i<=n; i+=2) if(isP[i]) for(int j=i*i; j<=n; j+=i) isP[j]=false;
    for(int i=2; i<=n; ++i) if(isP[i]) primes.emplace_back(i);
    return primes;
}
 
vector<int> seg_sieve(int n, int m) {
    if(n==1) ++n;
    if(m==1) ++m;
    vector<int> v=sieve(sqrt(m)+1);
    int N=m-n+1;
    vector<bool> p(N+1, true);
    for(auto i: v) {
        int j=(n/i)*i;
        if(j<n) j+=i;
        if(j==i) j+=i;
        for(int k=j; k<=m; k+=i) p[k-n]=false;
    }
    vector<int> ret;
    for(int i=0; i<N; ++i) if(p[i]) ret.emplace_back(n+i);
    return ret;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>_segsieve</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
